#!/usr/bin/env python

import argparse
import logging
import os

import rosbag_parquet


def build_parser():
    """
    Builds the parser for reading the command line arguments
    :return: The argument parser
    """
    parser = argparse.ArgumentParser(description='Script to parse bagfile to csv file')
    parser.add_argument('-b', '--bag', help='Bag file to read', required=True,
                        type=str)
    parser.add_argument('-i', '--include',
                        help='List for topics to include',
                        nargs='*')
    parser.add_argument('-e', '--exclude',
                        help='List for topics to exclude',
                        nargs='*')
    parser.add_argument('-o', '--output', help='directory of the output files', required=True)
    parser.add_argument('-v', '--verbose',
                        help="Log verbose",
                        default=False, action="store_true")
    parser.add_argument('-c', '--compression',
                        help="Compression algorithm to use",
                        default='zstd')
    return parser


if __name__ == '__main__':
    parser = build_parser()
    args = parser.parse_args()

    if args.verbose:
        logging.getLogger().setLevel(logging.DEBUG)

    dfs = rosbag_parquet.bag_to_dataframes(args.bag, include=args.include, exclude=args.exclude, show_progress=True)

    output_dir = args.output + '/' + args.bag.split('/')[-1].split('.')[0]
    os.makedirs(output_dir, exist_ok=True)
    for topic_name, df in dfs.items():
        try:
            df.to_parquet(output_dir + '/' + topic_name[1:].replace('/', '__') + '.parquet',
                          compression=args.compression)
        except Exception as e:
            print(f"Topic '{topic_name}' failed to save")
            print(e)
